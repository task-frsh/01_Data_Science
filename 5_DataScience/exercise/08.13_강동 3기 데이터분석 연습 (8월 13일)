{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"184_wYgVl6iMiVkVqCae9tdigEyE2Kx_K","timestamp":1723534741891},{"file_id":"1z8JDdJtbhI2HBl6Gj2_I9NOqaSo-j9bu","timestamp":1723533940166}],"collapsed_sections":["Caiap0e_NyEv","COVg6AJfE0Gu"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 한글 폰트"],"metadata":{"id":"Caiap0e_NyEv"}},{"cell_type":"code","source":["!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qsj_kolzJLp8","executionInfo":{"status":"ok","timestamp":1723534064174,"user_tz":-540,"elapsed":5683,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"22ebfb14-a38d-41af-e919-2fcd5eb13109"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 45 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.rc('font', family='NanumBarunGothic')\n","plt.rcParams['axes.unicode_minus'] =False"],"metadata":{"id":"ubgWhVweJOhY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 전력소비"],"metadata":{"id":"rtJt9CpZN6Nd"}},{"cell_type":"code","source":["import warnings\n","import pandas as pd\n","\n","# 오류 경고 무시 방법\n","warnings.filterwarnings(action='ignore') # https://remake.tistory.com/30\n","\n","file_path = 'OECD 주요국의 1인당 전력소비량.xlsx'\n","\n","oecd_data = pd.read_excel(file_path, header = 2)\n","\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"sfCJhbQCaSeD","executionInfo":{"status":"ok","timestamp":1723534095338,"user_tz":-540,"elapsed":627,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"8b206341-482f-428e-c1c8-3ffb81a15e4c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Unnamed: 0   2001   2002   2003   2004   2005   2006   2007   2008   2009  \\\n","0         영국  6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693   \n","1       이탈리아  5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271   \n","2         독일  6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781   \n","3        프랑스  7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494   \n","4         일본  7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833   \n","\n","    2010   2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","0  5,741  5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","1  5,384  5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","2  7,217  7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","3  7,756  7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","4  8,399  7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-8c8a6a70-2211-4daa-bc41-c0d59f8e3975\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>영국</td>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이탈리아</td>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>독일</td>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>프랑스</td>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>일본</td>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c8a6a70-2211-4daa-bc41-c0d59f8e3975')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c8a6a70-2211-4daa-bc41-c0d59f8e3975 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c8a6a70-2211-4daa-bc41-c0d59f8e3975');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2ad5fedc-6889-4e8b-bb5c-6f321d5c0946\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ad5fedc-6889-4e8b-bb5c-6f321d5c0946')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2ad5fedc-6889-4e8b-bb5c-6f321d5c0946 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Unnamed 변경\n","\n","oecd_data.rename(columns={'Unnamed: 0': 'index'}, inplace=True)\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ElvxvcXke3Xw","executionInfo":{"status":"ok","timestamp":1723534108552,"user_tz":-540,"elapsed":560,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"999fd9e3-946d-4326-9a09-dcf641fac87a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  index   2001   2002   2003   2004   2005   2006   2007   2008   2009   2010  \\\n","0    영국  6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693  5,741   \n","1  이탈리아  5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271  5,384   \n","2    독일  6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781  7,217   \n","3   프랑스  7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494  7,756   \n","4    일본  7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833  8,399   \n","\n","    2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","0  5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","1  5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","2  7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","3  7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","4  7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-922f33d2-1f67-4025-aa54-d31db09b9168\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>영국</td>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>이탈리아</td>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>독일</td>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>프랑스</td>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>일본</td>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-922f33d2-1f67-4025-aa54-d31db09b9168')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-922f33d2-1f67-4025-aa54-d31db09b9168 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-922f33d2-1f67-4025-aa54-d31db09b9168');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-13bc7f84-b67a-483f-b728-d9465883861b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13bc7f84-b67a-483f-b728-d9465883861b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-13bc7f84-b67a-483f-b728-d9465883861b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["oecd_data.set_index('index', inplace=True)\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"AtM_0NHnfGO9","executionInfo":{"status":"ok","timestamp":1723534112520,"user_tz":-540,"elapsed":495,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"25594d77-ebcf-4e74-ed47-2ea944cf9582"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        2001   2002   2003   2004   2005   2006   2007   2008   2009   2010  \\\n","index                                                                         \n","영국     6,192  6,158  6,231  6,206  6,254  6,192  6,142  6,067  5,693  5,741   \n","이탈리아   5,318  5,447  5,576  5,644  5,676  5,762  5,718  5,656  5,271  5,384   \n","독일     6,806  6,742  6,898  7,030  7,111  7,175  7,185  7,148  6,781  7,217   \n","프랑스    7,402  7,366  7,624  7,689  7,707  7,585  7,573  7,703  7,494  7,756   \n","일본     7,907  8,220  7,816  8,076  8,233  8,220  8,475  8,072  7,833  8,399   \n","\n","        2011   2012   2013   2014   2015   2016   2017   2018   2019  \n","index                                                                 \n","영국     5,518  5,452  5,409  5,131  5,082  5,033  4,951  4,906  4,750  \n","이탈리아   5,393  5,277  5,124  5,002  5,099  5,081  5,202  5,220  5,207  \n","독일     7,083  7,138  7,022  7,035  7,015  6,956  6,947  6,848  6,606  \n","프랑스    7,318  7,367  7,382  6,955  7,043  7,148  7,209  7,141  7,043  \n","일본     7,847  7,753  7,836  7,829  7,865  7,974  8,111  8,010  7,935  "],"text/html":["\n","  <div id=\"df-c51681a5-6370-4b40-ba54-3e54e207326d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>영국</th>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>이탈리아</th>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>독일</th>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>프랑스</th>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>일본</th>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c51681a5-6370-4b40-ba54-3e54e207326d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c51681a5-6370-4b40-ba54-3e54e207326d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c51681a5-6370-4b40-ba54-3e54e207326d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9e2009c2-aee4-4bc5-8db8-7529b97bbcf6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e2009c2-aee4-4bc5-8db8-7529b97bbcf6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9e2009c2-aee4-4bc5-8db8-7529b97bbcf6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"OECD\\ud3c9\\uade0\",\n          \"\\uc601\\uad6d\",\n          \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"IEA,\\u300cKey World Energy Statistics\\u300d\",\n          \"26,947\",\n          \"6,192\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["oecd_data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":393},"id":"TQ8DK40UfNQq","executionInfo":{"status":"ok","timestamp":1723534116846,"user_tz":-540,"elapsed":463,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"9a120616-a9b5-4f87-a5ef-f2e00c60d764"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  2001    2002    2003  \\\n","index                                                                    \n","한국                                               5,607   6,495   7,007   \n","미국                                              12,896  13,228  13,066   \n","아이슬란드                                           26,947  27,764  27,630   \n","출처:                  IEA,「Key World Energy Statistics」     NaN     NaN   \n","NaN      * 자료 : IEA,「Key World Energy Statistics」 각 연도     NaN     NaN   \n","\n","         2004    2005    2006    2007    2008    2009    2010    2011    2012  \\\n","index                                                                           \n","한국      7,391   7,779   8,063   8,502   8,853   8,980   9,851  10,162  10,346   \n","미국     13,338  13,640  13,515  13,616  13,647  12,884  13,361  13,227  12,947   \n","아이슬란드  28,126  28,057  31,306  36,920  49,818  51,179  51,447  52,376  53,156   \n","출처:       NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","NaN       NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","\n","         2013    2014    2015    2016    2017    2018    2019  \n","index                                                          \n","한국     10,428  10,564  10,558  10,618  10,654  11,082  10,878  \n","미국     12,987  12,962  12,833  12,825  12,573  13,098  12,744  \n","아이슬란드  54,759  53,896  55,054  53,913  54,366  54,605  52,514  \n","출처:       NaN     NaN     NaN     NaN     NaN     NaN     NaN  \n","NaN       NaN     NaN     NaN     NaN     NaN     NaN     NaN  "],"text/html":["\n","  <div id=\"df-d6dff687-e27c-4420-87d2-78434ce0e5c9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>한국</th>\n","      <td>5,607</td>\n","      <td>6,495</td>\n","      <td>7,007</td>\n","      <td>7,391</td>\n","      <td>7,779</td>\n","      <td>8,063</td>\n","      <td>8,502</td>\n","      <td>8,853</td>\n","      <td>8,980</td>\n","      <td>9,851</td>\n","      <td>10,162</td>\n","      <td>10,346</td>\n","      <td>10,428</td>\n","      <td>10,564</td>\n","      <td>10,558</td>\n","      <td>10,618</td>\n","      <td>10,654</td>\n","      <td>11,082</td>\n","      <td>10,878</td>\n","    </tr>\n","    <tr>\n","      <th>미국</th>\n","      <td>12,896</td>\n","      <td>13,228</td>\n","      <td>13,066</td>\n","      <td>13,338</td>\n","      <td>13,640</td>\n","      <td>13,515</td>\n","      <td>13,616</td>\n","      <td>13,647</td>\n","      <td>12,884</td>\n","      <td>13,361</td>\n","      <td>13,227</td>\n","      <td>12,947</td>\n","      <td>12,987</td>\n","      <td>12,962</td>\n","      <td>12,833</td>\n","      <td>12,825</td>\n","      <td>12,573</td>\n","      <td>13,098</td>\n","      <td>12,744</td>\n","    </tr>\n","    <tr>\n","      <th>아이슬란드</th>\n","      <td>26,947</td>\n","      <td>27,764</td>\n","      <td>27,630</td>\n","      <td>28,126</td>\n","      <td>28,057</td>\n","      <td>31,306</td>\n","      <td>36,920</td>\n","      <td>49,818</td>\n","      <td>51,179</td>\n","      <td>51,447</td>\n","      <td>52,376</td>\n","      <td>53,156</td>\n","      <td>54,759</td>\n","      <td>53,896</td>\n","      <td>55,054</td>\n","      <td>53,913</td>\n","      <td>54,366</td>\n","      <td>54,605</td>\n","      <td>52,514</td>\n","    </tr>\n","    <tr>\n","      <th>출처:</th>\n","      <td>IEA,「Key World Energy Statistics」</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>NaN</th>\n","      <td>* 자료 : IEA,「Key World Energy Statistics」 각 연도</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6dff687-e27c-4420-87d2-78434ce0e5c9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d6dff687-e27c-4420-87d2-78434ce0e5c9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d6dff687-e27c-4420-87d2-78434ce0e5c9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd920347-507f-4372-9909-81c8adac656e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd920347-507f-4372-9909-81c8adac656e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd920347-507f-4372-9909-81c8adac656e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\ubbf8\\uad6d\",\n          \"\\ucd9c\\ucc98:\",\n          \"\\ud55c\\uad6d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"12,896\",\n          \"  * \\uc790\\ub8cc : IEA,\\u300cKey World Energy Statistics\\u300d \\uac01 \\uc5f0\\ub3c4\",\n          \"26,947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"6,495\",\n          \"13,228\",\n          \"27,764\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,007\",\n          \"13,066\",\n          \"27,630\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,391\",\n          \"13,338\",\n          \"28,126\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"7,779\",\n          \"13,640\",\n          \"28,057\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,063\",\n          \"13,515\",\n          \"31,306\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,502\",\n          \"13,616\",\n          \"36,920\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,853\",\n          \"13,647\",\n          \"49,818\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"8,980\",\n          \"12,884\",\n          \"51,179\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"9,851\",\n          \"13,361\",\n          \"51,447\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,162\",\n          \"13,227\",\n          \"52,376\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,346\",\n          \"12,947\",\n          \"53,156\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,428\",\n          \"12,987\",\n          \"54,759\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,564\",\n          \"12,962\",\n          \"53,896\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,558\",\n          \"12,833\",\n          \"55,054\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,618\",\n          \"12,825\",\n          \"53,913\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,654\",\n          \"12,573\",\n          \"54,366\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"11,082\",\n          \"13,098\",\n          \"54,605\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10,878\",\n          \"12,744\",\n          \"52,514\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["oecd_data = oecd_data.loc['영국':'아이슬란드']\n","oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"ZUSv8B1QfTeO","executionInfo":{"status":"ok","timestamp":1723534125520,"user_tz":-540,"elapsed":641,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"286d7f09-f383-4178-e7cb-131b05524265"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          2001    2002    2003    2004    2005    2006    2007    2008  \\\n","index                                                                    \n","영국       6,192   6,158   6,231   6,206   6,254   6,192   6,142   6,067   \n","이탈리아     5,318   5,447   5,576   5,644   5,676   5,762   5,718   5,656   \n","독일       6,806   6,742   6,898   7,030   7,111   7,175   7,185   7,148   \n","프랑스      7,402   7,366   7,624   7,689   7,707   7,585   7,573   7,703   \n","일본       7,907   8,220   7,816   8,076   8,233   8,220   8,475   8,072   \n","OECD평균   7,879   8,046   8,044   8,204   8,365   8,381   8,477   8,486   \n","호주      10,335  10,502  10,642  11,126  11,439  11,309  11,216  11,174   \n","한국       5,607   6,495   7,007   7,391   7,779   8,063   8,502   8,853   \n","미국      12,896  13,228  13,066  13,338  13,640  13,515  13,616  13,647   \n","아이슬란드   26,947  27,764  27,630  28,126  28,057  31,306  36,920  49,818   \n","\n","          2009    2010    2011    2012    2013    2014    2015    2016  \\\n","index                                                                    \n","영국       5,693   5,741   5,518   5,452   5,409   5,131   5,082   5,033   \n","이탈리아     5,271   5,384   5,393   5,277   5,124   5,002   5,099   5,081   \n","독일       6,781   7,217   7,083   7,138   7,022   7,035   7,015   6,956   \n","프랑스      7,494   7,756   7,318   7,367   7,382   6,955   7,043   7,148   \n","일본       7,833   8,399   7,847   7,753   7,836   7,829   7,865   7,974   \n","OECD평균   8,012   8,315   8,226   8,089   8,072   8,028   8,016   8,048   \n","호주      11,038  10,063  10,514  10,218  10,067  10,002   9,892   9,911   \n","한국       8,980   9,851  10,162  10,346  10,428  10,564  10,558  10,618   \n","미국      12,884  13,361  13,227  12,947  12,987  12,962  12,833  12,825   \n","아이슬란드   51,179  51,447  52,376  53,156  54,759  53,896  55,054  53,913   \n","\n","          2017    2018    2019  \n","index                           \n","영국       4,951   4,906   4,750  \n","이탈리아     5,202   5,220   5,207  \n","독일       6,947   6,848   6,606  \n","프랑스      7,209   7,141   7,043  \n","일본       8,111   8,010   7,935  \n","OECD평균   7,992   8,165   7,773  \n","호주       9,922   9,906   9,897  \n","한국      10,654  11,082  10,878  \n","미국      12,573  13,098  12,744  \n","아이슬란드   54,366  54,605  52,514  "],"text/html":["\n","  <div id=\"df-8b9c371c-ef1f-4eb1-bc56-7a677d96e79a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>2008</th>\n","      <th>2009</th>\n","      <th>2010</th>\n","      <th>2011</th>\n","      <th>2012</th>\n","      <th>2013</th>\n","      <th>2014</th>\n","      <th>2015</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>영국</th>\n","      <td>6,192</td>\n","      <td>6,158</td>\n","      <td>6,231</td>\n","      <td>6,206</td>\n","      <td>6,254</td>\n","      <td>6,192</td>\n","      <td>6,142</td>\n","      <td>6,067</td>\n","      <td>5,693</td>\n","      <td>5,741</td>\n","      <td>5,518</td>\n","      <td>5,452</td>\n","      <td>5,409</td>\n","      <td>5,131</td>\n","      <td>5,082</td>\n","      <td>5,033</td>\n","      <td>4,951</td>\n","      <td>4,906</td>\n","      <td>4,750</td>\n","    </tr>\n","    <tr>\n","      <th>이탈리아</th>\n","      <td>5,318</td>\n","      <td>5,447</td>\n","      <td>5,576</td>\n","      <td>5,644</td>\n","      <td>5,676</td>\n","      <td>5,762</td>\n","      <td>5,718</td>\n","      <td>5,656</td>\n","      <td>5,271</td>\n","      <td>5,384</td>\n","      <td>5,393</td>\n","      <td>5,277</td>\n","      <td>5,124</td>\n","      <td>5,002</td>\n","      <td>5,099</td>\n","      <td>5,081</td>\n","      <td>5,202</td>\n","      <td>5,220</td>\n","      <td>5,207</td>\n","    </tr>\n","    <tr>\n","      <th>독일</th>\n","      <td>6,806</td>\n","      <td>6,742</td>\n","      <td>6,898</td>\n","      <td>7,030</td>\n","      <td>7,111</td>\n","      <td>7,175</td>\n","      <td>7,185</td>\n","      <td>7,148</td>\n","      <td>6,781</td>\n","      <td>7,217</td>\n","      <td>7,083</td>\n","      <td>7,138</td>\n","      <td>7,022</td>\n","      <td>7,035</td>\n","      <td>7,015</td>\n","      <td>6,956</td>\n","      <td>6,947</td>\n","      <td>6,848</td>\n","      <td>6,606</td>\n","    </tr>\n","    <tr>\n","      <th>프랑스</th>\n","      <td>7,402</td>\n","      <td>7,366</td>\n","      <td>7,624</td>\n","      <td>7,689</td>\n","      <td>7,707</td>\n","      <td>7,585</td>\n","      <td>7,573</td>\n","      <td>7,703</td>\n","      <td>7,494</td>\n","      <td>7,756</td>\n","      <td>7,318</td>\n","      <td>7,367</td>\n","      <td>7,382</td>\n","      <td>6,955</td>\n","      <td>7,043</td>\n","      <td>7,148</td>\n","      <td>7,209</td>\n","      <td>7,141</td>\n","      <td>7,043</td>\n","    </tr>\n","    <tr>\n","      <th>일본</th>\n","      <td>7,907</td>\n","      <td>8,220</td>\n","      <td>7,816</td>\n","      <td>8,076</td>\n","      <td>8,233</td>\n","      <td>8,220</td>\n","      <td>8,475</td>\n","      <td>8,072</td>\n","      <td>7,833</td>\n","      <td>8,399</td>\n","      <td>7,847</td>\n","      <td>7,753</td>\n","      <td>7,836</td>\n","      <td>7,829</td>\n","      <td>7,865</td>\n","      <td>7,974</td>\n","      <td>8,111</td>\n","      <td>8,010</td>\n","      <td>7,935</td>\n","    </tr>\n","    <tr>\n","      <th>OECD평균</th>\n","      <td>7,879</td>\n","      <td>8,046</td>\n","      <td>8,044</td>\n","      <td>8,204</td>\n","      <td>8,365</td>\n","      <td>8,381</td>\n","      <td>8,477</td>\n","      <td>8,486</td>\n","      <td>8,012</td>\n","      <td>8,315</td>\n","      <td>8,226</td>\n","      <td>8,089</td>\n","      <td>8,072</td>\n","      <td>8,028</td>\n","      <td>8,016</td>\n","      <td>8,048</td>\n","      <td>7,992</td>\n","      <td>8,165</td>\n","      <td>7,773</td>\n","    </tr>\n","    <tr>\n","      <th>호주</th>\n","      <td>10,335</td>\n","      <td>10,502</td>\n","      <td>10,642</td>\n","      <td>11,126</td>\n","      <td>11,439</td>\n","      <td>11,309</td>\n","      <td>11,216</td>\n","      <td>11,174</td>\n","      <td>11,038</td>\n","      <td>10,063</td>\n","      <td>10,514</td>\n","      <td>10,218</td>\n","      <td>10,067</td>\n","      <td>10,002</td>\n","      <td>9,892</td>\n","      <td>9,911</td>\n","      <td>9,922</td>\n","      <td>9,906</td>\n","      <td>9,897</td>\n","    </tr>\n","    <tr>\n","      <th>한국</th>\n","      <td>5,607</td>\n","      <td>6,495</td>\n","      <td>7,007</td>\n","      <td>7,391</td>\n","      <td>7,779</td>\n","      <td>8,063</td>\n","      <td>8,502</td>\n","      <td>8,853</td>\n","      <td>8,980</td>\n","      <td>9,851</td>\n","      <td>10,162</td>\n","      <td>10,346</td>\n","      <td>10,428</td>\n","      <td>10,564</td>\n","      <td>10,558</td>\n","      <td>10,618</td>\n","      <td>10,654</td>\n","      <td>11,082</td>\n","      <td>10,878</td>\n","    </tr>\n","    <tr>\n","      <th>미국</th>\n","      <td>12,896</td>\n","      <td>13,228</td>\n","      <td>13,066</td>\n","      <td>13,338</td>\n","      <td>13,640</td>\n","      <td>13,515</td>\n","      <td>13,616</td>\n","      <td>13,647</td>\n","      <td>12,884</td>\n","      <td>13,361</td>\n","      <td>13,227</td>\n","      <td>12,947</td>\n","      <td>12,987</td>\n","      <td>12,962</td>\n","      <td>12,833</td>\n","      <td>12,825</td>\n","      <td>12,573</td>\n","      <td>13,098</td>\n","      <td>12,744</td>\n","    </tr>\n","    <tr>\n","      <th>아이슬란드</th>\n","      <td>26,947</td>\n","      <td>27,764</td>\n","      <td>27,630</td>\n","      <td>28,126</td>\n","      <td>28,057</td>\n","      <td>31,306</td>\n","      <td>36,920</td>\n","      <td>49,818</td>\n","      <td>51,179</td>\n","      <td>51,447</td>\n","      <td>52,376</td>\n","      <td>53,156</td>\n","      <td>54,759</td>\n","      <td>53,896</td>\n","      <td>55,054</td>\n","      <td>53,913</td>\n","      <td>54,366</td>\n","      <td>54,605</td>\n","      <td>52,514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b9c371c-ef1f-4eb1-bc56-7a677d96e79a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b9c371c-ef1f-4eb1-bc56-7a677d96e79a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b9c371c-ef1f-4eb1-bc56-7a677d96e79a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6f23083-0a9a-4591-80f8-5c6a0c2f97af\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6f23083-0a9a-4591-80f8-5c6a0c2f97af')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6f23083-0a9a-4591-80f8-5c6a0c2f97af button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5f335749-074f-49c8-a560-fe84189b0ea7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5f335749-074f-49c8-a560-fe84189b0ea7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"\\ubbf8\\uad6d\",\n          \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n          \"OECD\\ud3c9\\uade0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2001\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,896\",\n          \"5,318\",\n          \"7,879\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2002\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,228\",\n          \"5,447\",\n          \"8,046\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2003\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,066\",\n          \"5,576\",\n          \"8,044\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2004\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,338\",\n          \"5,644\",\n          \"8,204\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2005\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,640\",\n          \"5,676\",\n          \"8,365\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2006\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,515\",\n          \"5,762\",\n          \"8,381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2007\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,616\",\n          \"5,718\",\n          \"8,477\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2008\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,647\",\n          \"5,656\",\n          \"8,486\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2009\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,884\",\n          \"5,271\",\n          \"8,012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2010\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,361\",\n          \"5,384\",\n          \"8,315\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2011\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,227\",\n          \"5,393\",\n          \"8,226\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2012\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,947\",\n          \"5,277\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2013\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,987\",\n          \"5,124\",\n          \"8,072\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2014\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,962\",\n          \"5,002\",\n          \"8,028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,833\",\n          \"5,099\",\n          \"8,016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,825\",\n          \"5,081\",\n          \"8,048\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,573\",\n          \"5,202\",\n          \"7,992\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"13,098\",\n          \"5,220\",\n          \"8,165\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"12,744\",\n          \"5,207\",\n          \"7,773\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["oecd_data = oecd_data.T\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZI5Wq27YdpUI","executionInfo":{"status":"ok","timestamp":1723534133445,"user_tz":-540,"elapsed":613,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"de4fc010-a168-4d1d-d874-d9d69af5ba2a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index     영국   이탈리아     독일    프랑스     일본 OECD평균      호주     한국      미국   아이슬란드\n","2001   6,192  5,318  6,806  7,402  7,907  7,879  10,335  5,607  12,896  26,947\n","2002   6,158  5,447  6,742  7,366  8,220  8,046  10,502  6,495  13,228  27,764\n","2003   6,231  5,576  6,898  7,624  7,816  8,044  10,642  7,007  13,066  27,630\n","2004   6,206  5,644  7,030  7,689  8,076  8,204  11,126  7,391  13,338  28,126\n","2005   6,254  5,676  7,111  7,707  8,233  8,365  11,439  7,779  13,640  28,057"],"text/html":["\n","  <div id=\"df-0ef702d7-370b-41ec-b88c-211daf86b023\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","      <th>독일</th>\n","      <th>프랑스</th>\n","      <th>일본</th>\n","      <th>OECD평균</th>\n","      <th>호주</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>아이슬란드</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>6,192</td>\n","      <td>5,318</td>\n","      <td>6,806</td>\n","      <td>7,402</td>\n","      <td>7,907</td>\n","      <td>7,879</td>\n","      <td>10,335</td>\n","      <td>5,607</td>\n","      <td>12,896</td>\n","      <td>26,947</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>6,158</td>\n","      <td>5,447</td>\n","      <td>6,742</td>\n","      <td>7,366</td>\n","      <td>8,220</td>\n","      <td>8,046</td>\n","      <td>10,502</td>\n","      <td>6,495</td>\n","      <td>13,228</td>\n","      <td>27,764</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>6,231</td>\n","      <td>5,576</td>\n","      <td>6,898</td>\n","      <td>7,624</td>\n","      <td>7,816</td>\n","      <td>8,044</td>\n","      <td>10,642</td>\n","      <td>7,007</td>\n","      <td>13,066</td>\n","      <td>27,630</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>6,206</td>\n","      <td>5,644</td>\n","      <td>7,030</td>\n","      <td>7,689</td>\n","      <td>8,076</td>\n","      <td>8,204</td>\n","      <td>11,126</td>\n","      <td>7,391</td>\n","      <td>13,338</td>\n","      <td>28,126</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>6,254</td>\n","      <td>5,676</td>\n","      <td>7,111</td>\n","      <td>7,707</td>\n","      <td>8,233</td>\n","      <td>8,365</td>\n","      <td>11,439</td>\n","      <td>7,779</td>\n","      <td>13,640</td>\n","      <td>28,057</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ef702d7-370b-41ec-b88c-211daf86b023')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ef702d7-370b-41ec-b88c-211daf86b023 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ef702d7-370b-41ec-b88c-211daf86b023');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b0855bdc-882a-424b-b944-8c9d55f3d111\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b0855bdc-882a-424b-b944-8c9d55f3d111')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b0855bdc-882a-424b-b944-8c9d55f3d111 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"6,192\",\n          \"6,158\",\n          \"5,741\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"5,318\",\n          \"5,762\",\n          \"5,277\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"6,806\",\n          \"7,175\",\n          \"7,138\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"7,402\",\n          \"7,366\",\n          \"7,494\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"7,907\",\n          \"8,220\",\n          \"8,399\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"7,879\",\n          \"8,381\",\n          \"8,089\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"10,335\",\n          \"11,309\",\n          \"10,218\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"5,607\",\n          \"8,063\",\n          \"10,346\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"12,896\",\n          \"13,515\",\n          \"12,947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"26,947\",\n          \"31,306\",\n          \"53,156\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["oecd_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wErOgLIdfhAn","executionInfo":{"status":"ok","timestamp":1723534137464,"user_tz":-540,"elapsed":491,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"a1502acd-8a81-489d-cc12-923d42eec803"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 19 entries, 2001 to 2019\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   영국      19 non-null     object\n"," 1   이탈리아    19 non-null     object\n"," 2   독일      19 non-null     object\n"," 3   프랑스     19 non-null     object\n"," 4   일본      19 non-null     object\n"," 5   OECD평균  19 non-null     object\n"," 6   호주      19 non-null     object\n"," 7   한국      19 non-null     object\n"," 8   미국      19 non-null     object\n"," 9   아이슬란드   19 non-null     object\n","dtypes: object(10)\n","memory usage: 2.2+ KB\n"]}]},{"cell_type":"code","source":["# 문자열에서 쉼표 제거 후 정수형으로 변환\n","\n","oecd_data = oecd_data.replace(',', '',regex=True).astype(int) # 쉼표(,)를 포함한 모든 숫자를 찾거나 특정한 패턴에 맞는 문자열을 찾는 등의 작업 https://wikidocs.net/154287\n","oecd_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIchCdbKf4bt","executionInfo":{"status":"ok","timestamp":1723534203815,"user_tz":-540,"elapsed":552,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"ce1d68fb-ce44-45cd-ed22-0a6ddb1cfa0c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 19 entries, 2001 to 2019\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype\n","---  ------  --------------  -----\n"," 0   영국      19 non-null     int64\n"," 1   이탈리아    19 non-null     int64\n"," 2   독일      19 non-null     int64\n"," 3   프랑스     19 non-null     int64\n"," 4   일본      19 non-null     int64\n"," 5   OECD평균  19 non-null     int64\n"," 6   호주      19 non-null     int64\n"," 7   한국      19 non-null     int64\n"," 8   미국      19 non-null     int64\n"," 9   아이슬란드   19 non-null     int64\n","dtypes: int64(10)\n","memory usage: 2.2+ KB\n"]}]},{"cell_type":"code","source":["oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"HHXu-PvKeMyL","executionInfo":{"status":"ok","timestamp":1723534206695,"user_tz":-540,"elapsed":479,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"19b5aac2-6882-4037-cc74-8248c627cc18"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index    영국  이탈리아    독일   프랑스    일본  OECD평균     호주     한국     미국  아이슬란드\n","2001   6192  5318  6806  7402  7907    7879  10335   5607  12896  26947\n","2002   6158  5447  6742  7366  8220    8046  10502   6495  13228  27764\n","2003   6231  5576  6898  7624  7816    8044  10642   7007  13066  27630\n","2004   6206  5644  7030  7689  8076    8204  11126   7391  13338  28126\n","2005   6254  5676  7111  7707  8233    8365  11439   7779  13640  28057\n","2006   6192  5762  7175  7585  8220    8381  11309   8063  13515  31306\n","2007   6142  5718  7185  7573  8475    8477  11216   8502  13616  36920\n","2008   6067  5656  7148  7703  8072    8486  11174   8853  13647  49818\n","2009   5693  5271  6781  7494  7833    8012  11038   8980  12884  51179\n","2010   5741  5384  7217  7756  8399    8315  10063   9851  13361  51447\n","2011   5518  5393  7083  7318  7847    8226  10514  10162  13227  52376\n","2012   5452  5277  7138  7367  7753    8089  10218  10346  12947  53156\n","2013   5409  5124  7022  7382  7836    8072  10067  10428  12987  54759\n","2014   5131  5002  7035  6955  7829    8028  10002  10564  12962  53896\n","2015   5082  5099  7015  7043  7865    8016   9892  10558  12833  55054\n","2016   5033  5081  6956  7148  7974    8048   9911  10618  12825  53913\n","2017   4951  5202  6947  7209  8111    7992   9922  10654  12573  54366\n","2018   4906  5220  6848  7141  8010    8165   9906  11082  13098  54605\n","2019   4750  5207  6606  7043  7935    7773   9897  10878  12744  52514"],"text/html":["\n","  <div id=\"df-e5a93294-e52d-442b-952e-f227f5c6647c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","      <th>독일</th>\n","      <th>프랑스</th>\n","      <th>일본</th>\n","      <th>OECD평균</th>\n","      <th>호주</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>아이슬란드</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>6192</td>\n","      <td>5318</td>\n","      <td>6806</td>\n","      <td>7402</td>\n","      <td>7907</td>\n","      <td>7879</td>\n","      <td>10335</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>26947</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>6158</td>\n","      <td>5447</td>\n","      <td>6742</td>\n","      <td>7366</td>\n","      <td>8220</td>\n","      <td>8046</td>\n","      <td>10502</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>27764</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>6231</td>\n","      <td>5576</td>\n","      <td>6898</td>\n","      <td>7624</td>\n","      <td>7816</td>\n","      <td>8044</td>\n","      <td>10642</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>27630</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>6206</td>\n","      <td>5644</td>\n","      <td>7030</td>\n","      <td>7689</td>\n","      <td>8076</td>\n","      <td>8204</td>\n","      <td>11126</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>28126</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>6254</td>\n","      <td>5676</td>\n","      <td>7111</td>\n","      <td>7707</td>\n","      <td>8233</td>\n","      <td>8365</td>\n","      <td>11439</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>28057</td>\n","    </tr>\n","    <tr>\n","      <th>2006</th>\n","      <td>6192</td>\n","      <td>5762</td>\n","      <td>7175</td>\n","      <td>7585</td>\n","      <td>8220</td>\n","      <td>8381</td>\n","      <td>11309</td>\n","      <td>8063</td>\n","      <td>13515</td>\n","      <td>31306</td>\n","    </tr>\n","    <tr>\n","      <th>2007</th>\n","      <td>6142</td>\n","      <td>5718</td>\n","      <td>7185</td>\n","      <td>7573</td>\n","      <td>8475</td>\n","      <td>8477</td>\n","      <td>11216</td>\n","      <td>8502</td>\n","      <td>13616</td>\n","      <td>36920</td>\n","    </tr>\n","    <tr>\n","      <th>2008</th>\n","      <td>6067</td>\n","      <td>5656</td>\n","      <td>7148</td>\n","      <td>7703</td>\n","      <td>8072</td>\n","      <td>8486</td>\n","      <td>11174</td>\n","      <td>8853</td>\n","      <td>13647</td>\n","      <td>49818</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>5693</td>\n","      <td>5271</td>\n","      <td>6781</td>\n","      <td>7494</td>\n","      <td>7833</td>\n","      <td>8012</td>\n","      <td>11038</td>\n","      <td>8980</td>\n","      <td>12884</td>\n","      <td>51179</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>5741</td>\n","      <td>5384</td>\n","      <td>7217</td>\n","      <td>7756</td>\n","      <td>8399</td>\n","      <td>8315</td>\n","      <td>10063</td>\n","      <td>9851</td>\n","      <td>13361</td>\n","      <td>51447</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>5518</td>\n","      <td>5393</td>\n","      <td>7083</td>\n","      <td>7318</td>\n","      <td>7847</td>\n","      <td>8226</td>\n","      <td>10514</td>\n","      <td>10162</td>\n","      <td>13227</td>\n","      <td>52376</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>5452</td>\n","      <td>5277</td>\n","      <td>7138</td>\n","      <td>7367</td>\n","      <td>7753</td>\n","      <td>8089</td>\n","      <td>10218</td>\n","      <td>10346</td>\n","      <td>12947</td>\n","      <td>53156</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>5409</td>\n","      <td>5124</td>\n","      <td>7022</td>\n","      <td>7382</td>\n","      <td>7836</td>\n","      <td>8072</td>\n","      <td>10067</td>\n","      <td>10428</td>\n","      <td>12987</td>\n","      <td>54759</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>5131</td>\n","      <td>5002</td>\n","      <td>7035</td>\n","      <td>6955</td>\n","      <td>7829</td>\n","      <td>8028</td>\n","      <td>10002</td>\n","      <td>10564</td>\n","      <td>12962</td>\n","      <td>53896</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>5082</td>\n","      <td>5099</td>\n","      <td>7015</td>\n","      <td>7043</td>\n","      <td>7865</td>\n","      <td>8016</td>\n","      <td>9892</td>\n","      <td>10558</td>\n","      <td>12833</td>\n","      <td>55054</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>5033</td>\n","      <td>5081</td>\n","      <td>6956</td>\n","      <td>7148</td>\n","      <td>7974</td>\n","      <td>8048</td>\n","      <td>9911</td>\n","      <td>10618</td>\n","      <td>12825</td>\n","      <td>53913</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>4951</td>\n","      <td>5202</td>\n","      <td>6947</td>\n","      <td>7209</td>\n","      <td>8111</td>\n","      <td>7992</td>\n","      <td>9922</td>\n","      <td>10654</td>\n","      <td>12573</td>\n","      <td>54366</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>4906</td>\n","      <td>5220</td>\n","      <td>6848</td>\n","      <td>7141</td>\n","      <td>8010</td>\n","      <td>8165</td>\n","      <td>9906</td>\n","      <td>11082</td>\n","      <td>13098</td>\n","      <td>54605</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>4750</td>\n","      <td>5207</td>\n","      <td>6606</td>\n","      <td>7043</td>\n","      <td>7935</td>\n","      <td>7773</td>\n","      <td>9897</td>\n","      <td>10878</td>\n","      <td>12744</td>\n","      <td>52514</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a93294-e52d-442b-952e-f227f5c6647c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5a93294-e52d-442b-952e-f227f5c6647c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5a93294-e52d-442b-952e-f227f5c6647c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-01675255-c4a3-4a34-9d4f-60fcbc6f05a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01675255-c4a3-4a34-9d4f-60fcbc6f05a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-01675255-c4a3-4a34-9d4f-60fcbc6f05a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a1626837-0675-4d7b-b461-c7c61341950e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a1626837-0675-4d7b-b461-c7c61341950e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc544\\uc774\\uc2ac\\ub780\\ub4dc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11920,\n        \"min\": 26947,\n        \"max\": 55054,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          26947,\n          31306,\n          53156\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# 컬럼 순서 변경 & 주요 국가만 추출\n","\n","oecd_data = oecd_data[['OECD평균', '한국', '미국', '호주','일본', '프랑스', '독일', '영국', '이탈리아']]\n","oecd_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7DciYOOpiT4b","executionInfo":{"status":"ok","timestamp":1723534282763,"user_tz":-540,"elapsed":508,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"b794438d-240e-4d5e-ebe9-079b5bef1856"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index  OECD평균    한국     미국     호주    일본   프랑스    독일    영국  이탈리아\n","2001     7879  5607  12896  10335  7907  7402  6806  6192  5318\n","2002     8046  6495  13228  10502  8220  7366  6742  6158  5447\n","2003     8044  7007  13066  10642  7816  7624  6898  6231  5576\n","2004     8204  7391  13338  11126  8076  7689  7030  6206  5644\n","2005     8365  7779  13640  11439  8233  7707  7111  6254  5676"],"text/html":["\n","  <div id=\"df-a30aafd7-ab8a-48ee-8a10-84c63da5d42c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>OECD평균</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>호주</th>\n","      <th>일본</th>\n","      <th>프랑스</th>\n","      <th>독일</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>7879</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>10335</td>\n","      <td>7907</td>\n","      <td>7402</td>\n","      <td>6806</td>\n","      <td>6192</td>\n","      <td>5318</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>8046</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>10502</td>\n","      <td>8220</td>\n","      <td>7366</td>\n","      <td>6742</td>\n","      <td>6158</td>\n","      <td>5447</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>8044</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>10642</td>\n","      <td>7816</td>\n","      <td>7624</td>\n","      <td>6898</td>\n","      <td>6231</td>\n","      <td>5576</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>8204</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>11126</td>\n","      <td>8076</td>\n","      <td>7689</td>\n","      <td>7030</td>\n","      <td>6206</td>\n","      <td>5644</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>8365</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>11439</td>\n","      <td>8233</td>\n","      <td>7707</td>\n","      <td>7111</td>\n","      <td>6254</td>\n","      <td>5676</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a30aafd7-ab8a-48ee-8a10-84c63da5d42c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a30aafd7-ab8a-48ee-8a10-84c63da5d42c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a30aafd7-ab8a-48ee-8a10-84c63da5d42c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-00d3900c-63bf-4ead-84f3-5c6380912ba8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00d3900c-63bf-4ead-84f3-5c6380912ba8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-00d3900c-63bf-4ead-84f3-5c6380912ba8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["oecd_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"FaTb-KABi2Mz","executionInfo":{"status":"ok","timestamp":1723534299599,"user_tz":-540,"elapsed":495,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"e28f1a75-2975-4276-8e49-42f7ebcb4d40"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index  OECD평균     한국     미국     호주    일본   프랑스    독일    영국  이탈리아\n","2001     7879   5607  12896  10335  7907  7402  6806  6192  5318\n","2002     8046   6495  13228  10502  8220  7366  6742  6158  5447\n","2003     8044   7007  13066  10642  7816  7624  6898  6231  5576\n","2004     8204   7391  13338  11126  8076  7689  7030  6206  5644\n","2005     8365   7779  13640  11439  8233  7707  7111  6254  5676\n","2006     8381   8063  13515  11309  8220  7585  7175  6192  5762\n","2007     8477   8502  13616  11216  8475  7573  7185  6142  5718\n","2008     8486   8853  13647  11174  8072  7703  7148  6067  5656\n","2009     8012   8980  12884  11038  7833  7494  6781  5693  5271\n","2010     8315   9851  13361  10063  8399  7756  7217  5741  5384\n","2011     8226  10162  13227  10514  7847  7318  7083  5518  5393\n","2012     8089  10346  12947  10218  7753  7367  7138  5452  5277\n","2013     8072  10428  12987  10067  7836  7382  7022  5409  5124\n","2014     8028  10564  12962  10002  7829  6955  7035  5131  5002\n","2015     8016  10558  12833   9892  7865  7043  7015  5082  5099\n","2016     8048  10618  12825   9911  7974  7148  6956  5033  5081\n","2017     7992  10654  12573   9922  8111  7209  6947  4951  5202\n","2018     8165  11082  13098   9906  8010  7141  6848  4906  5220\n","2019     7773  10878  12744   9897  7935  7043  6606  4750  5207"],"text/html":["\n","  <div id=\"df-e340a33b-2d05-4a62-8b2f-d171124346bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>index</th>\n","      <th>OECD평균</th>\n","      <th>한국</th>\n","      <th>미국</th>\n","      <th>호주</th>\n","      <th>일본</th>\n","      <th>프랑스</th>\n","      <th>독일</th>\n","      <th>영국</th>\n","      <th>이탈리아</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2001</th>\n","      <td>7879</td>\n","      <td>5607</td>\n","      <td>12896</td>\n","      <td>10335</td>\n","      <td>7907</td>\n","      <td>7402</td>\n","      <td>6806</td>\n","      <td>6192</td>\n","      <td>5318</td>\n","    </tr>\n","    <tr>\n","      <th>2002</th>\n","      <td>8046</td>\n","      <td>6495</td>\n","      <td>13228</td>\n","      <td>10502</td>\n","      <td>8220</td>\n","      <td>7366</td>\n","      <td>6742</td>\n","      <td>6158</td>\n","      <td>5447</td>\n","    </tr>\n","    <tr>\n","      <th>2003</th>\n","      <td>8044</td>\n","      <td>7007</td>\n","      <td>13066</td>\n","      <td>10642</td>\n","      <td>7816</td>\n","      <td>7624</td>\n","      <td>6898</td>\n","      <td>6231</td>\n","      <td>5576</td>\n","    </tr>\n","    <tr>\n","      <th>2004</th>\n","      <td>8204</td>\n","      <td>7391</td>\n","      <td>13338</td>\n","      <td>11126</td>\n","      <td>8076</td>\n","      <td>7689</td>\n","      <td>7030</td>\n","      <td>6206</td>\n","      <td>5644</td>\n","    </tr>\n","    <tr>\n","      <th>2005</th>\n","      <td>8365</td>\n","      <td>7779</td>\n","      <td>13640</td>\n","      <td>11439</td>\n","      <td>8233</td>\n","      <td>7707</td>\n","      <td>7111</td>\n","      <td>6254</td>\n","      <td>5676</td>\n","    </tr>\n","    <tr>\n","      <th>2006</th>\n","      <td>8381</td>\n","      <td>8063</td>\n","      <td>13515</td>\n","      <td>11309</td>\n","      <td>8220</td>\n","      <td>7585</td>\n","      <td>7175</td>\n","      <td>6192</td>\n","      <td>5762</td>\n","    </tr>\n","    <tr>\n","      <th>2007</th>\n","      <td>8477</td>\n","      <td>8502</td>\n","      <td>13616</td>\n","      <td>11216</td>\n","      <td>8475</td>\n","      <td>7573</td>\n","      <td>7185</td>\n","      <td>6142</td>\n","      <td>5718</td>\n","    </tr>\n","    <tr>\n","      <th>2008</th>\n","      <td>8486</td>\n","      <td>8853</td>\n","      <td>13647</td>\n","      <td>11174</td>\n","      <td>8072</td>\n","      <td>7703</td>\n","      <td>7148</td>\n","      <td>6067</td>\n","      <td>5656</td>\n","    </tr>\n","    <tr>\n","      <th>2009</th>\n","      <td>8012</td>\n","      <td>8980</td>\n","      <td>12884</td>\n","      <td>11038</td>\n","      <td>7833</td>\n","      <td>7494</td>\n","      <td>6781</td>\n","      <td>5693</td>\n","      <td>5271</td>\n","    </tr>\n","    <tr>\n","      <th>2010</th>\n","      <td>8315</td>\n","      <td>9851</td>\n","      <td>13361</td>\n","      <td>10063</td>\n","      <td>8399</td>\n","      <td>7756</td>\n","      <td>7217</td>\n","      <td>5741</td>\n","      <td>5384</td>\n","    </tr>\n","    <tr>\n","      <th>2011</th>\n","      <td>8226</td>\n","      <td>10162</td>\n","      <td>13227</td>\n","      <td>10514</td>\n","      <td>7847</td>\n","      <td>7318</td>\n","      <td>7083</td>\n","      <td>5518</td>\n","      <td>5393</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>8089</td>\n","      <td>10346</td>\n","      <td>12947</td>\n","      <td>10218</td>\n","      <td>7753</td>\n","      <td>7367</td>\n","      <td>7138</td>\n","      <td>5452</td>\n","      <td>5277</td>\n","    </tr>\n","    <tr>\n","      <th>2013</th>\n","      <td>8072</td>\n","      <td>10428</td>\n","      <td>12987</td>\n","      <td>10067</td>\n","      <td>7836</td>\n","      <td>7382</td>\n","      <td>7022</td>\n","      <td>5409</td>\n","      <td>5124</td>\n","    </tr>\n","    <tr>\n","      <th>2014</th>\n","      <td>8028</td>\n","      <td>10564</td>\n","      <td>12962</td>\n","      <td>10002</td>\n","      <td>7829</td>\n","      <td>6955</td>\n","      <td>7035</td>\n","      <td>5131</td>\n","      <td>5002</td>\n","    </tr>\n","    <tr>\n","      <th>2015</th>\n","      <td>8016</td>\n","      <td>10558</td>\n","      <td>12833</td>\n","      <td>9892</td>\n","      <td>7865</td>\n","      <td>7043</td>\n","      <td>7015</td>\n","      <td>5082</td>\n","      <td>5099</td>\n","    </tr>\n","    <tr>\n","      <th>2016</th>\n","      <td>8048</td>\n","      <td>10618</td>\n","      <td>12825</td>\n","      <td>9911</td>\n","      <td>7974</td>\n","      <td>7148</td>\n","      <td>6956</td>\n","      <td>5033</td>\n","      <td>5081</td>\n","    </tr>\n","    <tr>\n","      <th>2017</th>\n","      <td>7992</td>\n","      <td>10654</td>\n","      <td>12573</td>\n","      <td>9922</td>\n","      <td>8111</td>\n","      <td>7209</td>\n","      <td>6947</td>\n","      <td>4951</td>\n","      <td>5202</td>\n","    </tr>\n","    <tr>\n","      <th>2018</th>\n","      <td>8165</td>\n","      <td>11082</td>\n","      <td>13098</td>\n","      <td>9906</td>\n","      <td>8010</td>\n","      <td>7141</td>\n","      <td>6848</td>\n","      <td>4906</td>\n","      <td>5220</td>\n","    </tr>\n","    <tr>\n","      <th>2019</th>\n","      <td>7773</td>\n","      <td>10878</td>\n","      <td>12744</td>\n","      <td>9897</td>\n","      <td>7935</td>\n","      <td>7043</td>\n","      <td>6606</td>\n","      <td>4750</td>\n","      <td>5207</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e340a33b-2d05-4a62-8b2f-d171124346bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e340a33b-2d05-4a62-8b2f-d171124346bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e340a33b-2d05-4a62-8b2f-d171124346bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7996c162-5602-4c3f-b14d-bd03058771d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7996c162-5602-4c3f-b14d-bd03058771d5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7996c162-5602-4c3f-b14d-bd03058771d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6a3302c4-a4ef-4201-972f-ceeb4f313ff5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('oecd_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6a3302c4-a4ef-4201-972f-ceeb4f313ff5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('oecd_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"oecd_data","summary":"{\n  \"name\": \"oecd_data\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"OECD\\ud3c9\\uade0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 195,\n        \"min\": 7773,\n        \"max\": 8486,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          7879,\n          8381,\n          8089\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud55c\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1676,\n        \"min\": 5607,\n        \"max\": 11082,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5607,\n          8063,\n          10346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubbf8\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 322,\n        \"min\": 12573,\n        \"max\": 13647,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          12896,\n          13515,\n          12947\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud638\\uc8fc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 9892,\n        \"max\": 11439,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10335,\n          11309,\n          10218\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc77c\\ubcf8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208,\n        \"min\": 7753,\n        \"max\": 8475,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7907,\n          8220,\n          8399\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud504\\ub791\\uc2a4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252,\n        \"min\": 6955,\n        \"max\": 7756,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          7402,\n          7366,\n          7494\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ub3c5\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 6606,\n        \"max\": 7217,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          6806,\n          7175,\n          7138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc601\\uad6d\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 538,\n        \"min\": 4750,\n        \"max\": 6254,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          6192,\n          6158,\n          5741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc774\\ud0c8\\ub9ac\\uc544\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 238,\n        \"min\": 5002,\n        \"max\": 5762,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          5318,\n          5762,\n          5277\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# 선택한 국가들의 연도별 1인당 전력 소비량을 꺾은선 그래프로 그리는 함수\n","\n","def plot_energy_consumption(data, countries):\n","\n","    # 연도를 x축으로 설정\n","    years = data.index\n","\n","    # 국가별로 꺾은선 그래프 그리기\n","    plt.figure(figsize=(12, 8))\n","    for country in countries:\n","        plt.plot(years, data[country], marker='o', label=country)\n","\n","    plt.title('주요 국가 1인당 전력 소비량 (2001-2019)')\n","    plt.xlabel('년도')\n","    plt.ylabel('1인당 전력 소비량 (kWh)')\n","    plt.xticks(rotation=45)\n","    plt.legend()\n","    plt.grid(True)\n","    plt.show()\n","\n","# 함수 호출\n","plot_energy_consumption(oecd_data, ['OECD평균','한국', '미국'])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":736},"id":"4or31q5YjO6-","executionInfo":{"status":"ok","timestamp":1723534304822,"user_tz":-540,"elapsed":910,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"75433f21-05ca-4ef1-a011-51584b4d2aea"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 2001~2019년 연평균 전력 소비량 막대 그래프\n","\n","def plot_avg_energy_consumption(data):\n","\n","    # 막대 그래프 그리기\n","    plt.figure(figsize=(8, 6))\n","    plt.bar(data.mean().index, data.mean().values, color=['r', 'g', 'b', 'c', 'm','y','pink', 'navy','gold']) # bars =\n","\n","    plt.title('2001-2019년 평균 전력 소비량 비교')\n","    plt.xlabel('국가')\n","    plt.ylabel('평균 전력 소비량 (kWh)')\n","    plt.xticks(rotation=45)\n","\n","    # for bar in bars:\n","    #     height = bar.get_height()\n","    #     plt.text(bar.get_x() + bar.get_width() / 2.0, height, f'{int(height)}', ha='center', va='bottom')\n","\n","    plt.show()\n","\n","\n","plot_avg_energy_consumption(oecd_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":603},"id":"YpyP8DsDkAlr","executionInfo":{"status":"ok","timestamp":1723534611044,"user_tz":-540,"elapsed":637,"user":{"displayName":"Minju Kim","userId":"17403835420675176158"}},"outputId":"7a596ecc-3dd3-474f-86bf-c167e4d0205c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}